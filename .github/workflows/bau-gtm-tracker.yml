name: "bau-gtm-tracker CI/CD"

on:
  push:
    branches:
      - main
    tags:
      - 'release/@baudevs/bau-gtm-tracker/*'
  workflow_dispatch:

permissions:
  contents: write
  actions: read
  id-token: write # needed for npm provenance

env:
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_TOKEN || '' }}
  NPM_ACCESS_TOKEN: ${{ secrets.NPM_TOKEN || '' }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN || '' }}
  NODE_VERSION: '23.x'
  PROJECT: '@baudevs/bau-gtm-tracker'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: 'https://registry.npmjs.org'

      - name: Setup Pnpm
        uses: pnpm/action-setup@v4
        with:
          version: '9.15.1'

      - name: Install Dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Set SHAs for Affected Commands
        run: pnpm nx set-shas

      - name: Run Linting
        run: pnpm nx --project=${{ env.PROJECT }} --target=lint

      - name: Run Tests
        run: pnpm nx --project=${{ env.PROJECT }} --target=test

      - name: Build Affected Projects
        run: pnpm nx --project=${{ env.PROJECT }} --target=build

      - name: Configure Git credentials
        run: |
          git config --global user.name "baudevs"
          git config --global user.email "tech@baudevs.com"

      - name: Version and Release
        if: github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, '[skip ci]')
        run: |
          git config --global user.name "baudevs"
          git config --global user.email "tech@baudevs.com"
          pnpm nx version ${PROJECT}
          pnpm nx release --skip-nx-cache --skip-publish
          env:
            GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}

      - name: Publish Affected Projects
        if: startsWith(github.ref, 'refs/tags/release/${{ env.PROJECT }}/')
        run: pnpm nx release --project=${{ env.PROJECT }} --target=publish
        env:
          NPM_TOKEN: ${{ env.NPM_ACCESS_TOKEN }}
