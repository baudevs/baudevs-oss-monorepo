name: "Deploy Dashboard"

on:
  push:
    branches:
      - main
      - develop
      - staging
      - feature/*
  pull_request: {}

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow deployments per branch
concurrency:
  group: "pages-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      deployment_name: ${{ steps.deployment-name.outputs.name }}
      environment_name: ${{ steps.deployment-name.outputs.env }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Load secret
        uses: 1password/load-secrets-action@v2
        with:
          # Export loaded secrets as environment variables
          export-env: true
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN || '' }}
          VITE_OPENAI_API_KEY: op://BauDevs/OpenAI/credential

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Pnpm
        uses: pnpm/action-setup@v4
        with:
          version: '9.15.1'

      - name: Install Dependencies
        run: pnpm install

      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Set deployment name
        id: deployment-name
        run: |
          BRANCH_NAME="${{ github.ref_name }}"
          SANITIZED_NAME=$(echo "$BRANCH_NAME" | sed 's/\//-/g')
          if [ "$BRANCH_NAME" = "main" ]; then
            echo "name=production" >> $GITHUB_OUTPUT
            echo "env=github-pages" >> $GITHUB_OUTPUT
          elif [ "$BRANCH_NAME" = "develop" ]; then
            echo "name=staging" >> $GITHUB_OUTPUT
            echo "env=preview-staging" >> $GITHUB_OUTPUT
          else
            echo "name=preview-$SANITIZED_NAME" >> $GITHUB_OUTPUT
            echo "env=preview-$SANITIZED_NAME" >> $GITHUB_OUTPUT
          fi

      - name: Generate Repo Metadata
        run: |
          # Get git info
          AUTHOR_NAME=$(git log -1 --format='%an')
          AUTHOR_EMAIL=$(git log -1 --format='%ae')
          BRANCH_NAME="${{ github.ref_name }}"
          COMMIT_HASH="${{ github.sha }}"

          # Generate metadata
          pnpm run scripts/generate-repo-metadata.ts \
            --author="$AUTHOR_NAME" \
            --email="$AUTHOR_EMAIL" \
            --branch="$BRANCH_NAME" \
            --commit="$COMMIT_HASH"

          # Copy to dashboard public directory
          cp repoMetadata.json apps/baudevs-dashboard/public/

      - name: Build Dashboard
        run: pnpm nx build baudevs-dashboard --verbose

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist/apps/baudevs-dashboard
          name: github-pages-${{ steps.deployment-name.outputs.name }}

  deploy:
    environment:
      name: ${{ needs.build.outputs.environment_name }}
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: github-pages-${{ needs.build.outputs.deployment_name }}
