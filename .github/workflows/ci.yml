name: CI & Publish

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: write
  actions: read
  id-token: write # needed for npm provenance
env:
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
  NPM_ACCESS_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  NODE_VERSION: 23

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: https://registry.npmjs.org/
          cache: 'npm'
      
      - run: npm install

      - run: npm ci --legacy-peer-deps

      - run: npx playwright install --with-deps

      - uses: nrwl/nx-set-shas@v4

      # Run checks on affected projects
      - name: Run affected targets
        run: npx nx affected --target=lint,test,build,e2e --parallel

      # Release process only on main branch
      - name: Version and Release
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        env:
          GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ env.NPM_ACCESS_TOKEN }}
          NPM_CONFIG_PROVENANCE: true
        run: |
          # Create versions and tags
          npx nx release version
          
          # Build all affected projects
          npx nx affected --target=build
          
          # Publish the packages
          npx nx release publish